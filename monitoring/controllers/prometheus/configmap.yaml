apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: ops-monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    scrape_configs:
      # Prometheus selbst (UI) - Programm-/Handler-Metriken droppen
      - job_name: prometheus
        static_configs:
          - targets: ['localhost:9090']
        metric_relabel_configs:
          - source_labels: [__name__]
            regex: '^(go_.*|process_.*|promhttp_.*)$'
            action: drop
      # === NODES: Node Exporter auf jeder Node ===
      - job_name: node-exporter
        static_configs:
          - targets:
              # Hinweis: Falls Hostnames im Pod nicht resolvbar sind, lieber IPs eintragen.
              - 'cp-1:9100'
              - 'cp-2:9100'
              - 'cp-3:9100'
              - 'wk-1:9100'
              - 'wk-2:9100'
              - 'wk-3:9100'
        metric_relabel_configs:
          - source_labels: [__name__]
            regex: '^(go_.*|process_.*|promhttp_.*)$'
            action: drop
      # === INGRESS: NGINX Controller Metrics ===
      - job_name: nginx-ingress
        static_configs:
          - targets:
              - 'ingress-10-ingress-10-ingress-nginx-controller-metrics.ingress-10.svc:10254'
              - 'ingress-20-ingress-20-ingress-nginx-controller-metrics.ingress-20.svc:10254'
              - 'ingress-30-ingress-30-ingress-nginx-controller-metrics.ingress-30.svc:10254'
              - 'ingress-100-ingress-100-ingress-nginx-controller-metrics.ingress-100.svc:10254'
        metric_relabel_configs:
          - source_labels: [__name__]
            regex: '^(go_.*|process_.*|promhttp_.*)$'
            action: drop
      # === CLUSTER HEALTH: API-Server (/metrics) ===
      - job_name: kubernetes-apiserver
        scheme: https
        static_configs:
          - targets: ['kubernetes.default.svc:443']
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        metric_relabel_configs:
          - source_labels: [__name__]
            regex: '^(go_.*|process_.*|promhttp_.*)$'
            action: drop
      # === CLUSTER HEALTH: CoreDNS ===
      - job_name: coredns
        static_configs:
          - targets: ['kube-dns.kube-system.svc:9153']
        metric_relabel_configs:
          - source_labels: [__name__]
            regex: '^(go_.*|process_.*|promhttp_.*)$'
            action: drop
      # === CLUSTER HEALTH: kube-state-metrics (Zustand/Verf√ºgbarkeit) ===
      - job_name: kube-state-metrics
        static_configs:
          - targets: ['kube-state-metrics.ops-monitoring.svc:8080']
        metric_relabel_configs:
          - source_labels: [__name__]
            regex: '^(go_.*|process_.*|promhttp_.*)$'
            action: drop
      # === STORAGE: Longhorn ===
      - job_name: longhorn
        dns_sd_configs:
          - names: ['_metrics._tcp.longhorn-manager-metrics.longhorn-system.svc']
            type: SRV
            refresh_interval: 1m
        metric_relabel_configs:
          - source_labels: [__name__]
            regex: '^(go_.*|process_.*|promhttp_.*)$'
            action: drop
      # === PING EXPORTER: Metrics ===
      - job_name: ping-exporter
        static_configs:
          - targets: ['ping-exporter.ops-monitoring.svc:9427']
        metric_relabel_configs:
          - source_labels: [__name__]
            regex: '^(go_.*|process_.*|promhttp_.*)$'
            action: drop