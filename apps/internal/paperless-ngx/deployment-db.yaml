apiVersion: apps/v1
kind: Deployment
metadata:
  name: paperless-db
  namespace: svc-paperless-ngx
  labels:
    app: paperless-ngx
spec:
  replicas: 1
  selector:
    matchLabels:
      component: db
  template:
    metadata:
      labels:
        app: paperless-ngx
        component: db
    spec:
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
      initContainers:
        - name: init-volume
          image: busybox:1.28
          command: ['sh', '-c', 'rm -rf /var/lib/postgresql/data/pgdata/lost+found && chown -R 1000:1000 /var/lib/postgresql/data/pgdata']
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: pgdata
              mountPath: /var/lib/postgresql/data/pgdata
      containers:
        - name: db
          image: docker.io/library/postgres:17
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: paperless-secret
                  key: postgres_db
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: paperless-secret
                  key: postgres_user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: paperless-secret
                  key: postgres_password
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          volumeMounts:
            - name: pgdata
              mountPath: /var/lib/postgresql/data/pgdata
          resources:
            requests: { cpu: 50m, memory: 128Mi }
            limits: { cpu: 500m, memory: 512Mi }
      volumes:
        - name: pgdata
          persistentVolumeClaim:
            claimName: paperless-pgdata